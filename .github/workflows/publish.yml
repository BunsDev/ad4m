name: Publish AD4MIN as a release on GitHub

on:
  push:
    branches:
      - 'tuari-upload-release-fix'

jobs:
  create-release:
    runs-on: ubuntu-20.04
    outputs:
      release: ${{ steps.create-release.outputs.result }}

    steps:
      - uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: get version
        run: echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
      - name: create release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: true
          prerelease: false

  test:
    runs-on: ubuntu-latest
    needs: create-release
    steps:
      - name: test
        run: echo ${{ needs.create-release.outputs.upload_url }}

  build-ad4min-binary:
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest]
        node-version: [16.x]

    needs: create-release

    runs-on: ${{ matrix.platform }}

    steps:
    - name: Fetch source code
      uses: actions/checkout@v2

    - name: Install Rust stable
      uses: actions-rs/toolchain@v1
      with:
        override: true
        toolchain: 1.63.0

    - name: install dependencies (ubuntu only)
      if: matrix.platform == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Yarn Install
      run: yarn install

    - name: Build AD4M-Host & build AD4MIN binary (macos-latest)
      if: matrix.platform == 'macos-latest'
      run: yarn run build-macos

    - name: Build AD4M-Host & build AD4MIN binary (windows-latest)
      if: matrix.platform == 'windows-latest'
      run: yarn run build-windows

    - name: Build AD4M-Host & build AD4MIN binary (linux-latest)
      if: matrix.platform == 'ubuntu-latest'
      run: yarn run build-linux

    - name: Upload Release Deb Asset
      id: upload-release-deb-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: /home/runner/work/ad4m/ad4m/target/release/bundle/deb/ad4m_0.2.8_amd64.deb
        asset_name: ad4m_0.2.8_amd64.deb
        asset_content_type: application/gzip

    - name: Upload Release AppImage Asset
      id: upload-release-appimage-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: /home/runner/work/ad4m/ad4m/target/release/bundle/appimage/ad4m_0.2.8_amd64.AppImage
        asset_name: ad4m_0.2.8_amd64.AppImage
        asset_content_type: application/gzip

    # - name: "Upload built AD4MIN"
    #   uses: tauri-apps/tauri-action@v0.3
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     tagName: v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
    #     releaseName: "Ad4min v__VERSION__"
    #     releaseBody: "See the assets to download this version and install."
    #     projectPath: "./ui"